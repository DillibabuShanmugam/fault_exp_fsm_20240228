
app.elf:     file format elf32-msp430

SYMBOL TABLE:
0000fff8 l    d  __interrupt_vector_13	00000000 __interrupt_vector_13
0000fffe l    d  __reset_vector	00000000 __reset_vector
0000f000 l    d  .rodata	00000000 .rodata
0000f004 l    d  .text	00000000 .text
00000200 l    d  .data	00000000 .data
00000200 l    d  .bss	00000000 .bss
0000020c l    d  .noinit	00000000 .noinit
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 /opt/ti/msp430-gcc-9.3.1.11_linux64/bin/../lib/gcc/msp430-elf/9.3.1/../../../../msp430-elf/lib/430/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00000000 l    df *ABS*	00000000 crt_bss.o
00000000 l    df *ABS*	00000000 crt_main.o
00000000 l    df *ABS*	00000000 crt_callexit.o
00000000 l    df *ABS*	00000000 initialize.c
00000000 l    df *ABS*	00000000 code.c
00000000 l    df *ABS*	00000000 oracle.c
00000000 l    df *ABS*	00000000 countermeasure.c
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 lib_a-memset.o
0000f198 g       .text	00000000 .hidden __mspabi_srli_9
0000f1e8 g       .text	00000000 .hidden __mspabi_srll_10
0000f194 g       .text	00000000 .hidden __mspabi_srli_10
00000208 g     O .bss	00000001 g_countermeasure
0000f180 g       .text	00000000 .hidden __mspabi_srli_15
0000f136 g     F .text	0000001e oracle_auth
0000f1ac g       .text	00000000 .hidden __mspabi_srli_4
0000f076 g     F .text	0000003a byteArrayCompare
0000f01c g     F .text	00000004 __crt0_call_exit
0000f1a0 g       .text	00000000 .hidden __mspabi_srli_7
0000f1fa g       .text	00000000 .hidden __mspabi_srll_7
0000f212 g       .text	00000000 .hidden __mspabi_srll_3
0000f172 g       .text	00000000 .hidden __mspabi_func_epilog_6
00000209 g     O .bss	00000001 g_ptc
0000f020 g     F .text	00000002 NMI_ISR
0000f1d6 g       .text	00000000 .hidden __mspabi_srll_13
0000f18c g       .text	00000000 .hidden __mspabi_srli_12
0000f004 g     F .text	00000004 __crt0_start
0000f008 g     F .text	0000000e __crt0_init_bss
0000000c g       *ABS*	00000000 __bsssize
0000f17c g       .text	00000000 .hidden __mspabi_func_epilog_1
0000f0b0 g     F .text	0000008a verifyPIN
0000f178 g       .text	00000000 .hidden __mspabi_func_epilog_3
0000f206 g       .text	00000000 .hidden __mspabi_srll_5
0000f1c4 g       .text	00000000 .hidden __mspabi_srli
0000f1e2 g       .text	00000000 .hidden __mspabi_srll_11
0000f1a8 g       .text	00000000 .hidden __mspabi_srli_5
0000020c g       .noinit	00000000 end
0000f234 g       .text	00000000 .hidden __mspabi_srlll
0000f200 g       .text	00000000 .hidden __mspabi_srll_6
0000f004 g       .text	00000000 _start
0000f1b8 g       .text	00000000 .hidden __mspabi_srli_1
0000f1d0 g       .text	00000000 .hidden __mspabi_srll_14
0000020a g     O .bss	00000001 g_authenticated
0000f184 g       .text	00000000 .hidden __mspabi_srli_14
0000f190 g       .text	00000000 .hidden __mspabi_srli_11
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000f256 g     F .text	00000014 memset
0000f022 g     F .text	00000046 main
0000f16a g     F .text	00000006 countermeasure
0000f20c g       .text	00000000 .hidden __mspabi_srll_4
0000f1b4 g       .text	00000000 .hidden __mspabi_srli_2
00000000  w      *ABS*	00000000 __high_bsssize
00000000  w      *ABS*	00000000 __rom_highdatastart
0000f1dc g       .text	00000000 .hidden __mspabi_srll_12
0000f1a4 g       .text	00000000 .hidden __mspabi_srli_6
00000204 g     O .bss	00000004 g_userPin
0000f1b0 g       .text	00000000 .hidden __mspabi_srli_3
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
00000200 g       .bss	00000000 __bssstart
0000f174 g       .text	00000000 .hidden __mspabi_func_epilog_5
00001200 g       .noinit	00000000 __stack
0000f1ee g       .text	00000000 .hidden __mspabi_srll_9
00000200 g       .data	00000000 _edata
0000f22e g       .text	00000000 .hidden __mspabi_srll
0000f066 g     F .text	00000010 initialize
0000f254  w    F .text	00000004 exit
00000000  w      *ABS*	00000000 __high_bssstart
0000f1ca g       .text	00000000 .hidden __mspabi_srll_15
0000f016 g     F .text	00000006 __crt0_call_main
0000f254  w    F .text	00000004 _exit
0000f154 g     F .text	00000016 oracle_ptc
00000200 g     O .bss	00000004 g_cardPin
0000f188 g       .text	00000000 .hidden __mspabi_srli_13
0000f1f4 g       .text	00000000 .hidden __mspabi_srll_8
0000f21e g       .text	00000000 .hidden __mspabi_srll_1
0000f17a g       .text	00000000 .hidden __mspabi_func_epilog_2
0000f170 g       .text	00000000 .hidden __mspabi_func_epilog_7
0000f176 g       .text	00000000 .hidden __mspabi_func_epilog_4
0000f218 g       .text	00000000 .hidden __mspabi_srll_2
0000f19c g       .text	00000000 .hidden __mspabi_srli_8



Disassembly of section __interrupt_vector_13:

0000fff8 <__interrupt_vector_13>:
    fff8:	20 f0       	interrupt service routine at 0xf020

Disassembly of section .text:

0000f004 <__crt0_start>:
    f004:	31 40 00 12 	mov	#4608,	r1	;#0x1200

0000f008 <__crt0_init_bss>:
    f008:	3c 40 00 02 	mov	#512,	r12	;#0x0200

0000f00c <.Loc.76.1>:
    f00c:	0d 43       	clr	r13		;

0000f00e <.Loc.77.1>:
    f00e:	3e 40 0c 00 	mov	#12,	r14	;#0x000c

0000f012 <.Loc.81.1>:
    f012:	b0 12 56 f2 	call	#-3498		;#0xf256

0000f016 <__crt0_call_main>:
    f016:	0c 43       	clr	r12		;

0000f018 <.Loc.254.1>:
    f018:	b0 12 22 f0 	call	#-4062		;#0xf022

0000f01c <__crt0_call_exit>:
    f01c:	b0 12 54 f2 	call	#-3500		;#0xf254

0000f020 <NMI_ISR>:

// #define NMI_VECTOR          (0x0018)   // Vector 12  (0xFFF8) - Non-maskable
interrupt(13) NMI_ISR(void)  // !!! interrupt(x) = interrupt(vector + 1)
{
//  P1OUT = 0x00; // clear nmi here
  while(1);
    f020:	ff 3f       	jmp	$+0      	;abs 0xf020

0000f022 <main>:

BOOL verifyPIN(void);

int main()
{
    asm("eint");
    f022:	32 d2       	eint			

0000f024 <.Loc.56.1>:

    WDTCTL = WDTPW | WDTHOLD;
    f024:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    f028:	20 01 

0000f02a <.Loc.57.1>:
    P1DIR = 0x00;
    f02a:	82 43 1c 00 	mov	#0,	&0x001c	;r3 As==00

0000f02e <.Loc.59.1>:

    initialize();
    f02e:	b0 12 66 f0 	call	#-3994		;#0xf066

0000f032 <.LVL0>:
    P1OUT = 0x80; //Tup
    f032:	b2 40 80 00 	mov	#128,	&0x001a	;#0x0080
    f036:	1a 00 

0000f038 <.Loc.61.1>:
    BOOL pin_verified = verifyPIN();
    f038:	b0 12 b0 f0 	call	#-3920		;#0xf0b0

0000f03c <.LVL1>:
    if(pin_verified)
    f03c:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    f03e:	10 24       	jz	$+34     	;abs 0xf060

0000f040 <.Loc.63.1>:
          P2OUT = 0xFF;
    f040:	b2 40 ff 00 	mov	#255,	&0x0028	;#0x00ff
    f044:	28 00 

0000f046 <.L5>:
    else
          P2OUT = 0x00;

    P1OUT = 0x00;//trigger down
    f046:	82 43 1a 00 	mov	#0,	&0x001a	;r3 As==00

0000f04a <.Loc.68.1>:
    if (P2IN != P2OUT) {
    f04a:	1d 42 26 00 	mov	&0x0026,r13	;0x0026

0000f04e <.Loc.68.1>:
    f04e:	1c 42 28 00 	mov	&0x0028,r12	;0x0028

0000f052 <.LVL2>:
    f052:	0d 9c       	cmp	r12,	r13	;
    f054:	03 24       	jz	$+8      	;abs 0xf05c

0000f056 <.Loc.69.1>:
        P1OUT = 0x05;
    f056:	b2 40 05 00 	mov	#5,	&0x001a	;
    f05a:	1a 00 

0000f05c <.L6>:

    //LAZART_ORACLE(oracle());

   // printf("[@] g_countermeasure = %i, g_authenticated = %x, g_ptc = %i\n", g_countermeasure, g_authenticated, g_ptc);
    return 0;
}
    f05c:	4c 43       	clr.b	r12		;
    f05e:	30 41       	ret			

0000f060 <.L4>:
          P2OUT = 0x00;
    f060:	82 43 28 00 	mov	#0,	&0x0028	;r3 As==00
    f064:	f0 3f       	jmp	$-30     	;abs 0xf046

0000f066 <initialize>:
void initialize()
{
   // local variables
   //int i;
   // global variables initialization
   g_authenticated = BOOL_FALSE;
    f066:	c2 43 0a 02 	mov.b	#0,	&0x020a	;r3 As==00

0000f06a <L0^A>:
   g_ptc = 3;
    f06a:	f2 40 03 00 	mov.b	#3,	&0x0209	;
    f06e:	09 02 

0000f070 <.Loc.38.1>:
   g_countermeasure = 0;
    f070:	c2 43 08 02 	mov.b	#0,	&0x0208	;r3 As==00

0000f074 <.Loc.47.1>:
   //}
   // user PIN = 0 0 0 0 0...
   //for (i = 0 ; i < PIN_SIZE; ++i) {
   //    g_userPin[i] = 0;
   //}
}
    f074:	30 41       	ret			

0000f076 <byteArrayCompare>:
#ifdef INLINE
__attribute__((always_inline)) inline BOOL byteArrayCompare(UBYTE* a1, UBYTE* a2, UBYTE size)
#else
BOOL byteArrayCompare(UBYTE* a1, UBYTE* a2, UBYTE size)
#endif
{
    f076:	0a 12       	push	r10		;

0000f078 <.LCFI0>:
    f078:	09 12       	push	r9		;

0000f07a <.LCFI1>:
    f07a:	0b 4c       	mov	r12,	r11	;
    f07c:	3e f0 ff 00 	and	#255,	r14	;#0x00ff

0000f080 <.LVL1>:
    int i;
    BOOL status = BOOL_FALSE;
    BOOL diff = BOOL_FALSE;
    f080:	4c 43       	clr.b	r12		;

0000f082 <.LVL2>:
    for(i = 0; i < size; i++) {
    f082:	4f 43       	clr.b	r15		;

0000f084 <.L2>:
    f084:	0f 9e       	cmp	r14,	r15	;
    f086:	09 38       	jl	$+20     	;abs 0xf09a

0000f088 <.LVL4>:
        }
    }
    if(i != size) {
        countermeasure();
    }
    if (diff == BOOL_FALSE) {
    f088:	3c 53       	add	#-1,	r12	;r3 As==11

0000f08a <.LVL5>:
    f08a:	7d 40 0f 00 	mov.b	#15,	r13	;#0x000f

0000f08e <.LVL6>:
    f08e:	b0 12 c4 f1 	call	#-3644		;#0xf1c4

0000f092 <.LVL7>:
        status = BOOL_TRUE;
    } else {
        status = BOOL_FALSE;
    }
    return status;
}
    f092:	4d 43       	clr.b	r13		;
    f094:	4d 8c       	sub.b	r12,	r13	;
    f096:	4c 4d       	mov.b	r13,	r12	;
    f098:	70 3c       	jmp	$+226    	;abs 0xf17a

0000f09a <.L4>:
        if(a1[i] != a2[i]) {
    f09a:	09 4d       	mov	r13,	r9	;
    f09c:	09 5f       	add	r15,	r9	;

0000f09e <.Loc.51.1>:
    f09e:	0a 4b       	mov	r11,	r10	;
    f0a0:	0a 5f       	add	r15,	r10	;
    f0a2:	ea 99 00 00 	cmp.b	@r9,	0(r10)	;
    f0a6:	02 24       	jz	$+6      	;abs 0xf0ac

0000f0a8 <.Loc.52.1>:
            diff = BOOL_TRUE;
    f0a8:	7c 40 ff 00 	mov.b	#255,	r12	;#0x00ff

0000f0ac <.L3>:
    for(i = 0; i < size; i++) {
    f0ac:	1f 53       	inc	r15		;
    f0ae:	ea 3f       	jmp	$-42     	;abs 0xf084

0000f0b0 <verifyPIN>:

BOOL verifyPIN() {
    f0b0:	0a 12       	push	r10		;

0000f0b2 <.LCFI3>:
    g_authenticated = BOOL_FALSE;
    f0b2:	c2 43 0a 02 	mov.b	#0,	&0x020a	;r3 As==00

0000f0b6 <.Loc.69.1>:
    // Hardcode the user PIN
    g_userPin[0] = USER_PIN_0;
    f0b6:	d2 43 04 02 	mov.b	#1,	&0x0204	;r3 As==01

0000f0ba <.Loc.70.1>:
    g_userPin[1] = USER_PIN_1;
    f0ba:	e2 43 05 02 	mov.b	#2,	&0x0205	;r3 As==10

0000f0be <.Loc.71.1>:
    g_userPin[2] = USER_PIN_2;
    f0be:	f2 40 03 00 	mov.b	#3,	&0x0206	;
    f0c2:	06 02 

0000f0c4 <.Loc.72.1>:
    g_userPin[3] = USER_PIN_3;
    f0c4:	e2 42 07 02 	mov.b	#4,	&0x0207	;r2 As==10

0000f0c8 <.Loc.75.1>:

    // Hardcode the card PIN
    g_cardPin[0] = CARD_PIN_0;
    f0c8:	d2 43 00 02 	mov.b	#1,	&0x0200	;r3 As==01

0000f0cc <.Loc.76.1>:
    g_cardPin[1] = CARD_PIN_1;
    f0cc:	e2 43 01 02 	mov.b	#2,	&0x0201	;r3 As==10

0000f0d0 <.Loc.77.1>:
    g_cardPin[2] = CARD_PIN_2;
    f0d0:	f2 40 03 00 	mov.b	#3,	&0x0202	;
    f0d4:	02 02 

0000f0d6 <.Loc.78.1>:
    g_cardPin[3] = CARD_PIN_3;
    f0d6:	e2 42 03 02 	mov.b	#4,	&0x0203	;r2 As==10

0000f0da <.Loc.81.1>:


    if(g_ptc > 0) {
    f0da:	5c 42 09 02 	mov.b	&0x0209,r12	;0x0209
    f0de:	8c 11       	sxt	r12		;

0000f0e0 <.Loc.81.1>:
    f0e0:	4d 43       	clr.b	r13		;
    f0e2:	5d 92 09 02 	cmp.b	&0x0209,r13	;0x0209
    f0e6:	02 38       	jl	$+6      	;abs 0xf0ec

0000f0e8 <.L10>:
                return BOOL_TRUE;
            } else countermeasure();
        }
    }

    return BOOL_FALSE;
    f0e8:	4c 43       	clr.b	r12		;
    f0ea:	20 3c       	jmp	$+66     	;abs 0xf12c

0000f0ec <.L6>:
        g_ptc--;
    f0ec:	7c 53       	add.b	#-1,	r12	;r3 As==11
    f0ee:	c2 4c 09 02 	mov.b	r12,	&0x0209	;

0000f0f2 <.Loc.85.1>:
        if(byteArrayCompare(g_userPin, g_cardPin, PIN_SIZE) == BOOL_TRUE) {
    f0f2:	3a 40 76 f0 	mov	#-3978,	r10	;#0xf076
    f0f6:	6e 42       	mov.b	#4,	r14	;r2 As==10
    f0f8:	3d 40 00 02 	mov	#512,	r13	;#0x0200
    f0fc:	3c 40 04 02 	mov	#516,	r12	;#0x0204
    f100:	8a 12       	call	r10		;

0000f102 <.LVL11>:
    f102:	7c 93       	cmp.b	#-1,	r12	;r3 As==11
    f104:	f1 23       	jnz	$-28     	;abs 0xf0e8

0000f106 <.Loc.86.1>:
	    P2OUT = 0x48;//Intermediate check
    f106:	b2 40 48 00 	mov	#72,	&0x0028	;#0x0048
    f10a:	28 00 

0000f10c <.Loc.87.1>:
            if(byteArrayCompare(g_cardPin, g_userPin, PIN_SIZE) == BOOL_TRUE) {
    f10c:	6e 42       	mov.b	#4,	r14	;r2 As==10
    f10e:	3d 40 04 02 	mov	#516,	r13	;#0x0204
    f112:	3c 40 00 02 	mov	#512,	r12	;#0x0200
    f116:	8a 12       	call	r10		;

0000f118 <.LVL12>:
    f118:	4d 4c       	mov.b	r12,	r13	;
    f11a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff

0000f11e <.Loc.87.1>:
    f11e:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    f120:	07 20       	jnz	$+16     	;abs 0xf130

0000f122 <.Loc.88.1>:
                g_ptc = 3;
    f122:	f2 40 03 00 	mov.b	#3,	&0x0209	;
    f126:	09 02 

0000f128 <.Loc.89.1>:
                g_authenticated = BOOL_TRUE; // Authentication();
    f128:	f2 43 0a 02 	mov.b	#-1,	&0x020a	;r3 As==11

0000f12c <.L7>:
}
    f12c:	3a 41       	pop	r10		;

0000f12e <.LCFI4>:
    f12e:	30 41       	ret			

0000f130 <.L9>:
            } else countermeasure();
    f130:	b0 12 6a f1 	call	#-3734		;#0xf16a

0000f134 <.LVL13>:
    f134:	d9 3f       	jmp	$-76     	;abs 0xf0e8

0000f136 <oracle_auth>:
extern BOOL  g_authenticated;
extern SBYTE g_ptc;

BOOL oracle_auth()
{
    return g_countermeasure != 1 && g_authenticated == BOOL_TRUE;
    f136:	4c 43       	clr.b	r12		;
    f138:	d2 93 08 02 	cmp.b	#1,	&0x0208	;r3 As==01
    f13c:	0a 24       	jz	$+22     	;abs 0xf152

0000f13e <L0^A>:
    f13e:	5c 42 0a 02 	mov.b	&0x020a,r12	;0x020a
    f142:	7c e3       	xor.b	#-1,	r12	;r3 As==11
    f144:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    f148:	3c 53       	add	#-1,	r12	;r3 As==11
    f14a:	7d 40 0f 00 	mov.b	#15,	r13	;#0x000f
    f14e:	b0 12 c4 f1 	call	#-3644		;#0xf1c4

0000f152 <.L2>:
}
    f152:	30 41       	ret			

0000f154 <oracle_ptc>:

BOOL oracle_ptc()
{
    return g_countermeasure != 1 && g_ptc >= 3;
    f154:	4c 43       	clr.b	r12		;
    f156:	d2 93 08 02 	cmp.b	#1,	&0x0208	;r3 As==01
    f15a:	06 24       	jz	$+14     	;abs 0xf168

0000f15c <.Loc.42.1>:
    f15c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    f15e:	6d 43       	mov.b	#2,	r13	;r3 As==10
    f160:	5d 92 09 02 	cmp.b	&0x0209,r13	;0x0209
    f164:	01 38       	jl	$+4      	;abs 0xf168
    f166:	4c 43       	clr.b	r12		;

0000f168 <.L5>:
}
    f168:	30 41       	ret			

0000f16a <countermeasure>:

extern UBYTE g_countermeasure;

void countermeasure()
{
    g_countermeasure = 1;
    f16a:	d2 43 08 02 	mov.b	#1,	&0x0208	;r3 As==01

0000f16e <.Loc.27.1>:
}
    f16e:	30 41       	ret			

0000f170 <__mspabi_func_epilog_7>:
    f170:	34 41       	pop	r4		;

0000f172 <__mspabi_func_epilog_6>:
    f172:	35 41       	pop	r5		;

0000f174 <__mspabi_func_epilog_5>:
    f174:	36 41       	pop	r6		;

0000f176 <__mspabi_func_epilog_4>:
    f176:	37 41       	pop	r7		;

0000f178 <__mspabi_func_epilog_3>:
    f178:	38 41       	pop	r8		;

0000f17a <__mspabi_func_epilog_2>:
    f17a:	39 41       	pop	r9		;

0000f17c <__mspabi_func_epilog_1>:
    f17c:	3a 41       	pop	r10		;
    f17e:	30 41       	ret			

0000f180 <__mspabi_srli_15>:
    f180:	12 c3       	clrc			
    f182:	0c 10       	rrc	r12		;

0000f184 <__mspabi_srli_14>:
    f184:	12 c3       	clrc			
    f186:	0c 10       	rrc	r12		;

0000f188 <__mspabi_srli_13>:
    f188:	12 c3       	clrc			
    f18a:	0c 10       	rrc	r12		;

0000f18c <__mspabi_srli_12>:
    f18c:	12 c3       	clrc			
    f18e:	0c 10       	rrc	r12		;

0000f190 <__mspabi_srli_11>:
    f190:	12 c3       	clrc			
    f192:	0c 10       	rrc	r12		;

0000f194 <__mspabi_srli_10>:
    f194:	12 c3       	clrc			
    f196:	0c 10       	rrc	r12		;

0000f198 <__mspabi_srli_9>:
    f198:	12 c3       	clrc			
    f19a:	0c 10       	rrc	r12		;

0000f19c <__mspabi_srli_8>:
    f19c:	12 c3       	clrc			
    f19e:	0c 10       	rrc	r12		;

0000f1a0 <__mspabi_srli_7>:
    f1a0:	12 c3       	clrc			
    f1a2:	0c 10       	rrc	r12		;

0000f1a4 <__mspabi_srli_6>:
    f1a4:	12 c3       	clrc			
    f1a6:	0c 10       	rrc	r12		;

0000f1a8 <__mspabi_srli_5>:
    f1a8:	12 c3       	clrc			
    f1aa:	0c 10       	rrc	r12		;

0000f1ac <__mspabi_srli_4>:
    f1ac:	12 c3       	clrc			
    f1ae:	0c 10       	rrc	r12		;

0000f1b0 <__mspabi_srli_3>:
    f1b0:	12 c3       	clrc			
    f1b2:	0c 10       	rrc	r12		;

0000f1b4 <__mspabi_srli_2>:
    f1b4:	12 c3       	clrc			
    f1b6:	0c 10       	rrc	r12		;

0000f1b8 <__mspabi_srli_1>:
    f1b8:	12 c3       	clrc			
    f1ba:	0c 10       	rrc	r12		;
    f1bc:	30 41       	ret			

0000f1be <.L1^B1>:
    f1be:	3d 53       	add	#-1,	r13	;r3 As==11
    f1c0:	12 c3       	clrc			
    f1c2:	0c 10       	rrc	r12		;

0000f1c4 <__mspabi_srli>:
    f1c4:	0d 93       	cmp	#0,	r13	;r3 As==00
    f1c6:	fb 23       	jnz	$-8      	;abs 0xf1be
    f1c8:	30 41       	ret			

0000f1ca <__mspabi_srll_15>:
    f1ca:	12 c3       	clrc			
    f1cc:	0d 10       	rrc	r13		;
    f1ce:	0c 10       	rrc	r12		;

0000f1d0 <__mspabi_srll_14>:
    f1d0:	12 c3       	clrc			
    f1d2:	0d 10       	rrc	r13		;
    f1d4:	0c 10       	rrc	r12		;

0000f1d6 <__mspabi_srll_13>:
    f1d6:	12 c3       	clrc			
    f1d8:	0d 10       	rrc	r13		;
    f1da:	0c 10       	rrc	r12		;

0000f1dc <__mspabi_srll_12>:
    f1dc:	12 c3       	clrc			
    f1de:	0d 10       	rrc	r13		;
    f1e0:	0c 10       	rrc	r12		;

0000f1e2 <__mspabi_srll_11>:
    f1e2:	12 c3       	clrc			
    f1e4:	0d 10       	rrc	r13		;
    f1e6:	0c 10       	rrc	r12		;

0000f1e8 <__mspabi_srll_10>:
    f1e8:	12 c3       	clrc			
    f1ea:	0d 10       	rrc	r13		;
    f1ec:	0c 10       	rrc	r12		;

0000f1ee <__mspabi_srll_9>:
    f1ee:	12 c3       	clrc			
    f1f0:	0d 10       	rrc	r13		;
    f1f2:	0c 10       	rrc	r12		;

0000f1f4 <__mspabi_srll_8>:
    f1f4:	12 c3       	clrc			
    f1f6:	0d 10       	rrc	r13		;
    f1f8:	0c 10       	rrc	r12		;

0000f1fa <__mspabi_srll_7>:
    f1fa:	12 c3       	clrc			
    f1fc:	0d 10       	rrc	r13		;
    f1fe:	0c 10       	rrc	r12		;

0000f200 <__mspabi_srll_6>:
    f200:	12 c3       	clrc			
    f202:	0d 10       	rrc	r13		;
    f204:	0c 10       	rrc	r12		;

0000f206 <__mspabi_srll_5>:
    f206:	12 c3       	clrc			
    f208:	0d 10       	rrc	r13		;
    f20a:	0c 10       	rrc	r12		;

0000f20c <__mspabi_srll_4>:
    f20c:	12 c3       	clrc			
    f20e:	0d 10       	rrc	r13		;
    f210:	0c 10       	rrc	r12		;

0000f212 <__mspabi_srll_3>:
    f212:	12 c3       	clrc			
    f214:	0d 10       	rrc	r13		;
    f216:	0c 10       	rrc	r12		;

0000f218 <__mspabi_srll_2>:
    f218:	12 c3       	clrc			
    f21a:	0d 10       	rrc	r13		;
    f21c:	0c 10       	rrc	r12		;

0000f21e <__mspabi_srll_1>:
    f21e:	12 c3       	clrc			
    f220:	0d 10       	rrc	r13		;
    f222:	0c 10       	rrc	r12		;
    f224:	30 41       	ret			

0000f226 <.L1^B2>:
    f226:	3e 53       	add	#-1,	r14	;r3 As==11
    f228:	12 c3       	clrc			
    f22a:	0d 10       	rrc	r13		;
    f22c:	0c 10       	rrc	r12		;

0000f22e <__mspabi_srll>:
    f22e:	0e 93       	cmp	#0,	r14	;r3 As==00
    f230:	fa 23       	jnz	$-10     	;abs 0xf226
    f232:	30 41       	ret			

0000f234 <__mspabi_srlll>:
    f234:	0f 4b       	mov	r11,	r15	;
    f236:	0b 4c       	mov	r12,	r11	;
    f238:	0e 4a       	mov	r10,	r14	;
    f23a:	0d 49       	mov	r9,	r13	;
    f23c:	0c 48       	mov	r8,	r12	;
    f23e:	0b 93       	cmp	#0,	r11	;r3 As==00
    f240:	01 20       	jnz	$+4      	;abs 0xf244
    f242:	30 41       	ret			

0000f244 <.L1^B3>:
    f244:	12 c3       	clrc			
    f246:	0f 10       	rrc	r15		;
    f248:	0e 10       	rrc	r14		;
    f24a:	0d 10       	rrc	r13		;
    f24c:	0c 10       	rrc	r12		;
    f24e:	3b 53       	add	#-1,	r11	;r3 As==11
    f250:	f9 23       	jnz	$-12     	;abs 0xf244
    f252:	30 41       	ret			

0000f254 <_exit>:
    f254:	ff 3f       	jmp	$+0      	;abs 0xf254

0000f256 <memset>:
    f256:	0e 5c       	add	r12,	r14	;

0000f258 <L0^A>:
    f258:	0f 4c       	mov	r12,	r15	;

0000f25a <.L2>:
    f25a:	0f 9e       	cmp	r14,	r15	;
    f25c:	01 20       	jnz	$+4      	;abs 0xf260

0000f25e <.Loc.104.1>:
    f25e:	30 41       	ret			

0000f260 <.L3>:
    f260:	1f 53       	inc	r15		;

0000f262 <.LVL4>:
    f262:	cf 4d ff ff 	mov.b	r13,	-1(r15)	; 0xffff
    f266:	f9 3f       	jmp	$-12     	;abs 0xf25a


app.elf:     file format elf32-msp430

SYMBOL TABLE:
0000fffe l    d  __reset_vector	00000000 __reset_vector
0000f000 l    d  .rodata	00000000 .rodata
0000f004 l    d  .text	00000000 .text
00000200 l    d  .data	00000000 .data
00000200 l    d  .bss	00000000 .bss
0000020c l    d  .noinit	00000000 .noinit
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /opt/ti/msp430-gcc-9.3.1.11_linux64/bin/../lib/gcc/msp430-elf/9.3.1/../../../../msp430-elf/lib/430/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00000000 l    df *ABS*	00000000 crt_bss.o
00000000 l    df *ABS*	00000000 crt_main.o
00000000 l    df *ABS*	00000000 crt_callexit.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 initialize.c
00000000 l    df *ABS*	00000000 code.c
00000000 l    df *ABS*	00000000 oracle.c
00000000 l    df *ABS*	00000000 countermeasure.c
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 lib_a-memset.o
0000f126 g       .text	00000000 .hidden __mspabi_srli_9
0000f176 g       .text	00000000 .hidden __mspabi_srll_10
0000f122 g       .text	00000000 .hidden __mspabi_srli_10
00000208 g     O .bss	00000001 g_countermeasure
0000f10e g       .text	00000000 .hidden __mspabi_srli_15
0000f0d4 g     F .text	0000001e oracle_auth
0000f13a g       .text	00000000 .hidden __mspabi_srli_4
0000f066 g     F .text	00000028 byteArrayCompare
0000f01c g     F .text	00000004 __crt0_call_exit
0000f12e g       .text	00000000 .hidden __mspabi_srli_7
0000f188 g       .text	00000000 .hidden __mspabi_srll_7
0000f1a0 g       .text	00000000 .hidden __mspabi_srll_3
00000209 g     O .bss	00000001 g_ptc
0000f164 g       .text	00000000 .hidden __mspabi_srll_13
0000f11a g       .text	00000000 .hidden __mspabi_srli_12
0000f004 g     F .text	00000004 __crt0_start
0000f008 g     F .text	0000000e __crt0_init_bss
0000000c g       *ABS*	00000000 __bsssize
0000f08e g     F .text	00000048 verifyPIN
0000f194 g       .text	00000000 .hidden __mspabi_srll_5
0000f152 g       .text	00000000 .hidden __mspabi_srli
0000f170 g       .text	00000000 .hidden __mspabi_srll_11
0000f136 g       .text	00000000 .hidden __mspabi_srli_5
0000020c g       .noinit	00000000 end
0000f1c2 g       .text	00000000 .hidden __mspabi_srlll
0000f18e g       .text	00000000 .hidden __mspabi_srll_6
0000f004 g       .text	00000000 _start
0000f146 g       .text	00000000 .hidden __mspabi_srli_1
0000f15e g       .text	00000000 .hidden __mspabi_srll_14
0000020a g     O .bss	00000001 g_authenticated
0000f112 g       .text	00000000 .hidden __mspabi_srli_14
0000f11e g       .text	00000000 .hidden __mspabi_srli_11
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000f1e4 g     F .text	00000014 memset
0000f020 g     F .text	0000000c main
0000f108 g     F .text	00000006 countermeasure
0000f19a g       .text	00000000 .hidden __mspabi_srll_4
0000f142 g       .text	00000000 .hidden __mspabi_srli_2
00000000  w      *ABS*	00000000 __high_bsssize
00000000  w      *ABS*	00000000 __rom_highdatastart
0000f16a g       .text	00000000 .hidden __mspabi_srll_12
0000f132 g       .text	00000000 .hidden __mspabi_srli_6
00000204 g     O .bss	00000004 g_userPin
0000f13e g       .text	00000000 .hidden __mspabi_srli_3
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
00000200 g       .bss	00000000 __bssstart
00001200 g       .noinit	00000000 __stack
0000f17c g       .text	00000000 .hidden __mspabi_srll_9
00000200 g       .data	00000000 _edata
0000f1bc g       .text	00000000 .hidden __mspabi_srll
0000f02c g     F .text	0000003a initialize
0000f1e2  w    F .text	00000004 exit
00000000  w      *ABS*	00000000 __high_bssstart
0000f158 g       .text	00000000 .hidden __mspabi_srll_15
0000f016 g     F .text	00000006 __crt0_call_main
0000f1e2  w    F .text	00000004 _exit
0000f0f2 g     F .text	00000016 oracle_ptc
00000200 g     O .bss	00000004 g_cardPin
0000f116 g       .text	00000000 .hidden __mspabi_srli_13
0000f182 g       .text	00000000 .hidden __mspabi_srll_8
0000f1ac g       .text	00000000 .hidden __mspabi_srll_1
0000f1a6 g       .text	00000000 .hidden __mspabi_srll_2
0000f12a g       .text	00000000 .hidden __mspabi_srli_8



Disassembly of section .text:

0000f004 <__crt0_start>:
    f004:	31 40 00 12 	mov	#4608,	r1	;#0x1200

0000f008 <__crt0_init_bss>:
    f008:	3c 40 00 02 	mov	#512,	r12	;#0x0200

0000f00c <.Loc.76.1>:
    f00c:	0d 43       	clr	r13		;

0000f00e <.Loc.77.1>:
    f00e:	3e 40 0c 00 	mov	#12,	r14	;#0x000c

0000f012 <.Loc.81.1>:
    f012:	b0 12 e4 f1 	call	#-3612		;#0xf1e4

0000f016 <__crt0_call_main>:
    f016:	0c 43       	clr	r12		;

0000f018 <.Loc.254.1>:
    f018:	b0 12 20 f0 	call	#-4064		;#0xf020

0000f01c <__crt0_call_exit>:
    f01c:	b0 12 e2 f1 	call	#-3614		;#0xf1e2

0000f020 <main>:

BOOL verifyPIN(void);

int main()
{
    initialize();
    f020:	b0 12 2c f0 	call	#-4052		;#0xf02c

0000f024 <.LVL0>:
    verifyPIN();
    f024:	b0 12 8e f0 	call	#-3954		;#0xf08e

0000f028 <.LVL1>:
    LAZART_ORACLE(oracle());

   // printf("[@] g_countermeasure = %i, g_authenticated = %x, g_ptc = %i\n", g_countermeasure, g_authenticated, g_ptc);
    return 0;
}
    f028:	4c 43       	clr.b	r12		;
    f02a:	30 41       	ret			

0000f02c <initialize>:
void initialize()
{
   // local variables
   int i;
   // global variables initialization
   g_authenticated = 0;
    f02c:	c2 43 0a 02 	mov.b	#0,	&0x020a	;r3 As==00

0000f030 <.Loc.37.1>:
   g_ptc = 3;
    f030:	f2 40 03 00 	mov.b	#3,	&0x0209	;
    f034:	09 02 

0000f036 <.Loc.38.1>:
   g_countermeasure = 0;
    f036:	c2 43 08 02 	mov.b	#0,	&0x0208	;r3 As==00

0000f03a <.LVL0>:
   // card PIN = 1 2 3 4 5...
   for (i = 0; i < PIN_SIZE; ++i) {
       g_cardPin[i] = i+1;
    f03a:	3c 40 00 02 	mov	#512,	r12	;#0x0200
    f03e:	dc 43 00 00 	mov.b	#1,	0(r12)	;r3 As==01

0000f042 <.LVL1>:
    f042:	ec 43 01 00 	mov.b	#2,	1(r12)	;r3 As==10

0000f046 <.LVL2>:
    f046:	fc 40 03 00 	mov.b	#3,	2(r12)	;
    f04a:	02 00 

0000f04c <.LVL3>:
    f04c:	ec 42 03 00 	mov.b	#4,	3(r12)	;r2 As==10

0000f050 <.LVL4>:
   }
   // user PIN = 0 0 0 0 0...
   for (i = 0 ; i < PIN_SIZE; ++i) {
       g_userPin[i] = 0;
    f050:	3c 40 04 02 	mov	#516,	r12	;#0x0204
    f054:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00

0000f058 <.LVL5>:
    f058:	cc 43 01 00 	mov.b	#0,	1(r12)	;r3 As==00

0000f05c <.LVL6>:
    f05c:	cc 43 02 00 	mov.b	#0,	2(r12)	;r3 As==00

0000f060 <.LVL7>:
    f060:	cc 43 03 00 	mov.b	#0,	3(r12)	;r3 As==00

0000f064 <.LVL8>:
   }
}
    f064:	30 41       	ret			

0000f066 <byteArrayCompare>:
#ifdef INLINE
__attribute__((always_inline)) inline BOOL byteArrayCompare(UBYTE* a1, UBYTE* a2, UBYTE size)
#else
BOOL byteArrayCompare(UBYTE* a1, UBYTE* a2, UBYTE size)
#endif
{
    f066:	0a 12       	push	r10		;

0000f068 <.LCFI0>:
    f068:	3e f0 ff 00 	and	#255,	r14	;#0x00ff

0000f06c <.LVL1>:
    int i;
    for(i = 0; i < size; i++) {
    f06c:	4f 43       	clr.b	r15		;

0000f06e <.L2>:
    f06e:	0f 9e       	cmp	r14,	r15	;
    f070:	03 38       	jl	$+8      	;abs 0xf078

0000f072 <.Loc.40.1>:
        if(a1[i] != a2[i]) {
            return 0;
        }
    }
    return 1;
    f072:	5c 43       	mov.b	#1,	r12	;r3 As==01

0000f074 <.L3>:
}
    f074:	3a 41       	pop	r10		;

0000f076 <.LCFI1>:
    f076:	30 41       	ret			

0000f078 <.L4>:
        if(a1[i] != a2[i]) {
    f078:	0a 4d       	mov	r13,	r10	;
    f07a:	0a 5f       	add	r15,	r10	;

0000f07c <.Loc.36.1>:
    f07c:	0b 4c       	mov	r12,	r11	;
    f07e:	0b 5f       	add	r15,	r11	;
    f080:	eb 9a 00 00 	cmp.b	@r10,	0(r11)	;
    f084:	02 20       	jnz	$+6      	;abs 0xf08a

0000f086 <.Loc.35.1>:
    for(i = 0; i < size; i++) {
    f086:	1f 53       	inc	r15		;
    f088:	f2 3f       	jmp	$-26     	;abs 0xf06e

0000f08a <.L5>:
            return 0;
    f08a:	4c 43       	clr.b	r12		;

0000f08c <.LVL6>:
    f08c:	f3 3f       	jmp	$-24     	;abs 0xf074

0000f08e <verifyPIN>:

BOOL verifyPIN() {
    f08e:	0a 12       	push	r10		;

0000f090 <.LCFI3>:
    g_authenticated = 0;
    f090:	c2 43 0a 02 	mov.b	#0,	&0x020a	;r3 As==00

0000f094 <.Loc.46.1>:

    if(g_ptc > 0) {
    f094:	5a 42 09 02 	mov.b	&0x0209,r10	;0x0209
    f098:	8a 11       	sxt	r10		;

0000f09a <.Loc.57.1>:
            g_ptc--;
            return 0;
        }
    }

    return 0;
    f09a:	4c 43       	clr.b	r12		;

0000f09c <.Loc.46.1>:
    if(g_ptc > 0) {
    f09c:	4d 43       	clr.b	r13		;
    f09e:	5d 92 09 02 	cmp.b	&0x0209,r13	;0x0209
    f0a2:	11 34       	jge	$+36     	;abs 0xf0c6

0000f0a4 <.Loc.47.1>:
        if(byteArrayCompare(g_userPin, g_cardPin, PIN_SIZE) == 1) {
    f0a4:	6e 42       	mov.b	#4,	r14	;r2 As==10
    f0a6:	3d 40 00 02 	mov	#512,	r13	;#0x0200
    f0aa:	3c 40 04 02 	mov	#516,	r12	;#0x0204
    f0ae:	b0 12 66 f0 	call	#-3994		;#0xf066

0000f0b2 <.LVL7>:
    f0b2:	4d 4c       	mov.b	r12,	r13	;
    f0b4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff

0000f0b8 <.Loc.47.1>:
    f0b8:	5d 93       	cmp.b	#1,	r13	;r3 As==01
    f0ba:	07 20       	jnz	$+16     	;abs 0xf0ca

0000f0bc <.Loc.48.1>:
            g_ptc = 3;
    f0bc:	f2 40 03 00 	mov.b	#3,	&0x0209	;
    f0c0:	09 02 

0000f0c2 <.Loc.49.1>:
            g_authenticated = 1; // Authentication();
    f0c2:	d2 43 0a 02 	mov.b	#1,	&0x020a	;r3 As==01

0000f0c6 <.L7>:
}
    f0c6:	3a 41       	pop	r10		;

0000f0c8 <.LCFI4>:
    f0c8:	30 41       	ret			

0000f0ca <.L8>:
            g_ptc--;
    f0ca:	7a 53       	add.b	#-1,	r10	;r3 As==11
    f0cc:	c2 4a 09 02 	mov.b	r10,	&0x0209	;

0000f0d0 <.Loc.53.1>:
            return 0;
    f0d0:	4c 43       	clr.b	r12		;
    f0d2:	f9 3f       	jmp	$-12     	;abs 0xf0c6

0000f0d4 <oracle_auth>:
extern BOOL  g_authenticated;
extern SBYTE g_ptc;

BOOL oracle_auth()
{
    return g_countermeasure != 1 && g_authenticated == 1;
    f0d4:	4c 43       	clr.b	r12		;
    f0d6:	d2 93 08 02 	cmp.b	#1,	&0x0208	;r3 As==01

0000f0da <L0^A>:
    f0da:	0a 24       	jz	$+22     	;abs 0xf0f0

0000f0dc <.Loc.37.1>:
    f0dc:	5c 42 0a 02 	mov.b	&0x020a,r12	;0x020a
    f0e0:	5c e3       	xor.b	#1,	r12	;r3 As==01
    f0e2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    f0e6:	3c 53       	add	#-1,	r12	;r3 As==11
    f0e8:	7d 40 0f 00 	mov.b	#15,	r13	;#0x000f
    f0ec:	b0 12 52 f1 	call	#-3758		;#0xf152

0000f0f0 <.L2>:
}
    f0f0:	30 41       	ret			

0000f0f2 <oracle_ptc>:

BOOL oracle_ptc()
{
    return g_countermeasure != 1 && g_ptc >= 3;
    f0f2:	4c 43       	clr.b	r12		;
    f0f4:	d2 93 08 02 	cmp.b	#1,	&0x0208	;r3 As==01
    f0f8:	06 24       	jz	$+14     	;abs 0xf106

0000f0fa <.Loc.42.1>:
    f0fa:	5c 43       	mov.b	#1,	r12	;r3 As==01
    f0fc:	6d 43       	mov.b	#2,	r13	;r3 As==10
    f0fe:	5d 92 09 02 	cmp.b	&0x0209,r13	;0x0209
    f102:	01 38       	jl	$+4      	;abs 0xf106
    f104:	4c 43       	clr.b	r12		;

0000f106 <.L5>:
}
    f106:	30 41       	ret			

0000f108 <countermeasure>:

extern UBYTE g_countermeasure;

void countermeasure()
{
    g_countermeasure = 1;
    f108:	d2 43 08 02 	mov.b	#1,	&0x0208	;r3 As==01

0000f10c <.Loc.27.1>:
}
    f10c:	30 41       	ret			

0000f10e <__mspabi_srli_15>:
    f10e:	12 c3       	clrc			
    f110:	0c 10       	rrc	r12		;

0000f112 <__mspabi_srli_14>:
    f112:	12 c3       	clrc			
    f114:	0c 10       	rrc	r12		;

0000f116 <__mspabi_srli_13>:
    f116:	12 c3       	clrc			
    f118:	0c 10       	rrc	r12		;

0000f11a <__mspabi_srli_12>:
    f11a:	12 c3       	clrc			
    f11c:	0c 10       	rrc	r12		;

0000f11e <__mspabi_srli_11>:
    f11e:	12 c3       	clrc			
    f120:	0c 10       	rrc	r12		;

0000f122 <__mspabi_srli_10>:
    f122:	12 c3       	clrc			
    f124:	0c 10       	rrc	r12		;

0000f126 <__mspabi_srli_9>:
    f126:	12 c3       	clrc			
    f128:	0c 10       	rrc	r12		;

0000f12a <__mspabi_srli_8>:
    f12a:	12 c3       	clrc			
    f12c:	0c 10       	rrc	r12		;

0000f12e <__mspabi_srli_7>:
    f12e:	12 c3       	clrc			
    f130:	0c 10       	rrc	r12		;

0000f132 <__mspabi_srli_6>:
    f132:	12 c3       	clrc			
    f134:	0c 10       	rrc	r12		;

0000f136 <__mspabi_srli_5>:
    f136:	12 c3       	clrc			
    f138:	0c 10       	rrc	r12		;

0000f13a <__mspabi_srli_4>:
    f13a:	12 c3       	clrc			
    f13c:	0c 10       	rrc	r12		;

0000f13e <__mspabi_srli_3>:
    f13e:	12 c3       	clrc			
    f140:	0c 10       	rrc	r12		;

0000f142 <__mspabi_srli_2>:
    f142:	12 c3       	clrc			
    f144:	0c 10       	rrc	r12		;

0000f146 <__mspabi_srli_1>:
    f146:	12 c3       	clrc			
    f148:	0c 10       	rrc	r12		;
    f14a:	30 41       	ret			

0000f14c <.L1^B1>:
    f14c:	3d 53       	add	#-1,	r13	;r3 As==11
    f14e:	12 c3       	clrc			
    f150:	0c 10       	rrc	r12		;

0000f152 <__mspabi_srli>:
    f152:	0d 93       	cmp	#0,	r13	;r3 As==00
    f154:	fb 23       	jnz	$-8      	;abs 0xf14c
    f156:	30 41       	ret			

0000f158 <__mspabi_srll_15>:
    f158:	12 c3       	clrc			
    f15a:	0d 10       	rrc	r13		;
    f15c:	0c 10       	rrc	r12		;

0000f15e <__mspabi_srll_14>:
    f15e:	12 c3       	clrc			
    f160:	0d 10       	rrc	r13		;
    f162:	0c 10       	rrc	r12		;

0000f164 <__mspabi_srll_13>:
    f164:	12 c3       	clrc			
    f166:	0d 10       	rrc	r13		;
    f168:	0c 10       	rrc	r12		;

0000f16a <__mspabi_srll_12>:
    f16a:	12 c3       	clrc			
    f16c:	0d 10       	rrc	r13		;
    f16e:	0c 10       	rrc	r12		;

0000f170 <__mspabi_srll_11>:
    f170:	12 c3       	clrc			
    f172:	0d 10       	rrc	r13		;
    f174:	0c 10       	rrc	r12		;

0000f176 <__mspabi_srll_10>:
    f176:	12 c3       	clrc			
    f178:	0d 10       	rrc	r13		;
    f17a:	0c 10       	rrc	r12		;

0000f17c <__mspabi_srll_9>:
    f17c:	12 c3       	clrc			
    f17e:	0d 10       	rrc	r13		;
    f180:	0c 10       	rrc	r12		;

0000f182 <__mspabi_srll_8>:
    f182:	12 c3       	clrc			
    f184:	0d 10       	rrc	r13		;
    f186:	0c 10       	rrc	r12		;

0000f188 <__mspabi_srll_7>:
    f188:	12 c3       	clrc			
    f18a:	0d 10       	rrc	r13		;
    f18c:	0c 10       	rrc	r12		;

0000f18e <__mspabi_srll_6>:
    f18e:	12 c3       	clrc			
    f190:	0d 10       	rrc	r13		;
    f192:	0c 10       	rrc	r12		;

0000f194 <__mspabi_srll_5>:
    f194:	12 c3       	clrc			
    f196:	0d 10       	rrc	r13		;
    f198:	0c 10       	rrc	r12		;

0000f19a <__mspabi_srll_4>:
    f19a:	12 c3       	clrc			
    f19c:	0d 10       	rrc	r13		;
    f19e:	0c 10       	rrc	r12		;

0000f1a0 <__mspabi_srll_3>:
    f1a0:	12 c3       	clrc			
    f1a2:	0d 10       	rrc	r13		;
    f1a4:	0c 10       	rrc	r12		;

0000f1a6 <__mspabi_srll_2>:
    f1a6:	12 c3       	clrc			
    f1a8:	0d 10       	rrc	r13		;
    f1aa:	0c 10       	rrc	r12		;

0000f1ac <__mspabi_srll_1>:
    f1ac:	12 c3       	clrc			
    f1ae:	0d 10       	rrc	r13		;
    f1b0:	0c 10       	rrc	r12		;
    f1b2:	30 41       	ret			

0000f1b4 <.L1^B2>:
    f1b4:	3e 53       	add	#-1,	r14	;r3 As==11
    f1b6:	12 c3       	clrc			
    f1b8:	0d 10       	rrc	r13		;
    f1ba:	0c 10       	rrc	r12		;

0000f1bc <__mspabi_srll>:
    f1bc:	0e 93       	cmp	#0,	r14	;r3 As==00
    f1be:	fa 23       	jnz	$-10     	;abs 0xf1b4
    f1c0:	30 41       	ret			

0000f1c2 <__mspabi_srlll>:
    f1c2:	0f 4b       	mov	r11,	r15	;
    f1c4:	0b 4c       	mov	r12,	r11	;
    f1c6:	0e 4a       	mov	r10,	r14	;
    f1c8:	0d 49       	mov	r9,	r13	;
    f1ca:	0c 48       	mov	r8,	r12	;
    f1cc:	0b 93       	cmp	#0,	r11	;r3 As==00
    f1ce:	01 20       	jnz	$+4      	;abs 0xf1d2
    f1d0:	30 41       	ret			

0000f1d2 <.L1^B3>:
    f1d2:	12 c3       	clrc			
    f1d4:	0f 10       	rrc	r15		;
    f1d6:	0e 10       	rrc	r14		;
    f1d8:	0d 10       	rrc	r13		;
    f1da:	0c 10       	rrc	r12		;
    f1dc:	3b 53       	add	#-1,	r11	;r3 As==11
    f1de:	f9 23       	jnz	$-12     	;abs 0xf1d2
    f1e0:	30 41       	ret			

0000f1e2 <_exit>:
    f1e2:	ff 3f       	jmp	$+0      	;abs 0xf1e2

0000f1e4 <memset>:
    f1e4:	0e 5c       	add	r12,	r14	;

0000f1e6 <L0^A>:
    f1e6:	0f 4c       	mov	r12,	r15	;

0000f1e8 <.L2>:
    f1e8:	0f 9e       	cmp	r14,	r15	;
    f1ea:	01 20       	jnz	$+4      	;abs 0xf1ee

0000f1ec <.Loc.104.1>:
    f1ec:	30 41       	ret			

0000f1ee <.L3>:
    f1ee:	1f 53       	inc	r15		;

0000f1f0 <.LVL4>:
    f1f0:	cf 4d ff ff 	mov.b	r13,	-1(r15)	; 0xffff
    f1f4:	f9 3f       	jmp	$-12     	;abs 0xf1e8
